<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Lim&#39;s 博客</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-09-28T04:05:23.023Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Lim</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>logback 配置</title>
    <link href="http://yoursite.com/2018/09/28/logback-%E9%85%8D%E7%BD%AE/"/>
    <id>http://yoursite.com/2018/09/28/logback-配置/</id>
    <published>2018-09-28T04:01:00.000Z</published>
    <updated>2018-09-28T04:05:23.023Z</updated>
    
    <content type="html"><![CDATA[<p>摘抄： <a href="https://juejin.im/post/5a1f86f0f265da4326529c61" target="_blank" rel="external">https://juejin.im/post/5a1f86f0f265da4326529c61</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</div><div class="line">&lt;configuration&gt;</div><div class="line"></div><div class="line">    &lt;!-- 日志根目录--&gt;</div><div class="line">    &lt;springProperty scope=&quot;context&quot; name=&quot;LOG_HOME&quot; source=&quot;logging.path&quot; defaultValue=&quot;/data/logs/spring-boot-logback&quot;/&gt;</div><div class="line"></div><div class="line">    &lt;!-- 日志级别 --&gt;</div><div class="line">    &lt;springProperty scope=&quot;context&quot; name=&quot;LOG_ROOT_LEVEL&quot; source=&quot;logging.level.root&quot; defaultValue=&quot;DEBUG&quot;/&gt;</div><div class="line"></div><div class="line">    &lt;!--  标识这个&quot;STDOUT&quot; 将会添加到这个logger --&gt;</div><div class="line">    &lt;springProperty scope=&quot;context&quot; name=&quot;STDOUT&quot; source=&quot;log.stdout&quot; defaultValue=&quot;STDOUT&quot;/&gt;</div><div class="line"></div><div class="line">    &lt;!-- 日志文件名称--&gt;</div><div class="line">    &lt;property name=&quot;LOG_PREFIX&quot; value=&quot;spring-boot-logback&quot; /&gt;</div><div class="line"></div><div class="line">    &lt;!-- 日志文件编码--&gt;</div><div class="line">    &lt;property name=&quot;LOG_CHARSET&quot; value=&quot;UTF-8&quot; /&gt;</div><div class="line"></div><div class="line">    &lt;!-- 日志文件路径+日期--&gt;</div><div class="line">    &lt;property name=&quot;LOG_DIR&quot; value=&quot;$&#123;LOG_HOME&#125;/%d&#123;yyyyMMdd&#125;&quot; /&gt;</div><div class="line"></div><div class="line">    &lt;!--对日志进行格式化--&gt;</div><div class="line">    &lt;property name=&quot;LOG_MSG&quot; value=&quot;- | [%X&#123;requestUUID&#125;] | [%d&#123;yyyyMMdd HH:mm:ss.SSS&#125;] | [%level] | [$&#123;HOSTNAME&#125;] | [%thread] | [%logger&#123;36&#125;] | --&gt; %msg|%n &quot;/&gt;</div><div class="line"></div><div class="line">    &lt;!--文件大小，默认10MB--&gt;</div><div class="line">    &lt;property name=&quot;MAX_FILE_SIZE&quot; value=&quot;50MB&quot; /&gt;</div><div class="line"></div><div class="line">    &lt;!-- 配置日志的滚动时间 ，表示只保留最近 10 天的日志--&gt;</div><div class="line">    &lt;property name=&quot;MAX_HISTORY&quot; value=&quot;10&quot;/&gt;</div><div class="line"></div><div class="line">    &lt;!--输出到控制台--&gt;</div><div class="line">    &lt;appender name=&quot;STDOUT&quot; class=&quot;ch.qos.logback.core.ConsoleAppender&quot;&gt;</div><div class="line">        &lt;!-- 输出的日志内容格式化--&gt;</div><div class="line">        &lt;layout class=&quot;ch.qos.logback.classic.PatternLayout&quot;&gt;</div><div class="line">            &lt;pattern&gt;$&#123;LOG_MSG&#125;&lt;/pattern&gt;</div><div class="line">        &lt;/layout&gt;</div><div class="line">    &lt;/appender&gt;</div><div class="line"></div><div class="line">    &lt;!--输出到文件--&gt;</div><div class="line">    &lt;appender name=&quot;0&quot; class=&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;&gt;</div><div class="line">    &lt;/appender&gt;</div><div class="line"></div><div class="line">    &lt;!-- 定义 ALL 日志的输出方式:--&gt;</div><div class="line">    &lt;appender name=&quot;FILE_ALL&quot; class=&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;&gt;</div><div class="line">        &lt;!--日志文件路径，日志文件名称--&gt;</div><div class="line">        &lt;File&gt;$&#123;LOG_HOME&#125;/all_$&#123;LOG_PREFIX&#125;.log&lt;/File&gt;</div><div class="line"></div><div class="line">        &lt;!-- 设置滚动策略，当天的日志大小超过 $&#123;MAX_FILE_SIZE&#125; 文件大小时候，新的内容写入新的文件， 默认10MB --&gt;</div><div class="line">        &lt;rollingPolicy class=&quot;ch.qos.logback.core.rolling.TimeBasedRollingPolicy&quot;&gt;</div><div class="line"></div><div class="line">            &lt;!--日志文件路径，新的 ALL 日志文件名称，“ i ” 是个变量 --&gt;</div><div class="line">            &lt;FileNamePattern&gt;$&#123;LOG_DIR&#125;/all_$&#123;LOG_PREFIX&#125;%i.log&lt;/FileNamePattern&gt;</div><div class="line"></div><div class="line">            &lt;!-- 配置日志的滚动时间 ，表示只保留最近 10 天的日志--&gt;</div><div class="line">            &lt;MaxHistory&gt;$&#123;MAX_HISTORY&#125;&lt;/MaxHistory&gt;</div><div class="line"></div><div class="line">            &lt;!--当天的日志大小超过 $&#123;MAX_FILE_SIZE&#125; 文件大小时候，新的内容写入新的文件， 默认10MB--&gt;</div><div class="line">            &lt;timeBasedFileNamingAndTriggeringPolicy class=&quot;ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP&quot;&gt;</div><div class="line">                &lt;maxFileSize&gt;$&#123;MAX_FILE_SIZE&#125;&lt;/maxFileSize&gt;</div><div class="line">            &lt;/timeBasedFileNamingAndTriggeringPolicy&gt;</div><div class="line"></div><div class="line">        &lt;/rollingPolicy&gt;</div><div class="line"></div><div class="line">        &lt;!-- 输出的日志内容格式化--&gt;</div><div class="line">        &lt;layout class=&quot;ch.qos.logback.classic.PatternLayout&quot;&gt;</div><div class="line">            &lt;pattern&gt;$&#123;LOG_MSG&#125;&lt;/pattern&gt;</div><div class="line">        &lt;/layout&gt;</div><div class="line">    &lt;/appender&gt;</div><div class="line"></div><div class="line">    &lt;!-- 定义 ERROR 日志的输出方式:--&gt;</div><div class="line">    &lt;appender name=&quot;FILE_ERROR&quot; class=&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;&gt;</div><div class="line">        &lt;!-- 下面为配置只输出error级别的日志 --&gt;</div><div class="line">        &lt;filter class=&quot;ch.qos.logback.classic.filter.LevelFilter&quot;&gt;</div><div class="line">            &lt;level&gt;ERROR&lt;/level&gt;</div><div class="line">            &lt;OnMismatch&gt;DENY&lt;/OnMismatch&gt;</div><div class="line">            &lt;OnMatch&gt;ACCEPT&lt;/OnMatch&gt;</div><div class="line">        &lt;/filter&gt;</div><div class="line">        &lt;!--日志文件路径，日志文件名称--&gt;</div><div class="line">        &lt;File&gt;$&#123;LOG_HOME&#125;/err_$&#123;LOG_PREFIX&#125;.log&lt;/File&gt;</div><div class="line"></div><div class="line">        &lt;!-- 设置滚动策略，当天的日志大小超过 $&#123;MAX_FILE_SIZE&#125; 文件大小时候，新的内容写入新的文件， 默认10MB --&gt;</div><div class="line">        &lt;rollingPolicy class=&quot;ch.qos.logback.core.rolling.TimeBasedRollingPolicy&quot;&gt;</div><div class="line"></div><div class="line">            &lt;!--日志文件路径，新的 ERR 日志文件名称，“ i ” 是个变量 --&gt;</div><div class="line">            &lt;FileNamePattern&gt;$&#123;LOG_DIR&#125;/err_$&#123;LOG_PREFIX&#125;%i.log&lt;/FileNamePattern&gt;</div><div class="line"></div><div class="line">            &lt;!-- 配置日志的滚动时间 ，表示只保留最近 10 天的日志--&gt;</div><div class="line">            &lt;MaxHistory&gt;$&#123;MAX_HISTORY&#125;&lt;/MaxHistory&gt;</div><div class="line"></div><div class="line">            &lt;!--当天的日志大小超过 $&#123;MAX_FILE_SIZE&#125; 文件大小时候，新的内容写入新的文件， 默认10MB--&gt;</div><div class="line">            &lt;timeBasedFileNamingAndTriggeringPolicy class=&quot;ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP&quot;&gt;</div><div class="line">                &lt;maxFileSize&gt;$&#123;MAX_FILE_SIZE&#125;&lt;/maxFileSize&gt;</div><div class="line">            &lt;/timeBasedFileNamingAndTriggeringPolicy&gt;</div><div class="line">        &lt;/rollingPolicy&gt;</div><div class="line"></div><div class="line">        &lt;!-- 输出的日志内容格式化--&gt;</div><div class="line">        &lt;layout class=&quot;ch.qos.logback.classic.PatternLayout&quot;&gt;</div><div class="line">            &lt;Pattern&gt;$&#123;LOG_MSG&#125;&lt;/Pattern&gt;</div><div class="line">        &lt;/layout&gt;</div><div class="line">    &lt;/appender&gt;</div><div class="line"></div><div class="line">    &lt;!-- additivity 设为false,则logger内容不附加至root ，配置以配置包下的所有类的日志的打印，级别是 ERROR--&gt;</div><div class="line"></div><div class="line">    &lt;logger name=&quot;org.springframework&quot;     level=&quot;ERROR&quot; /&gt;</div><div class="line">    &lt;logger name=&quot;org.apache.commons&quot;      level=&quot;ERROR&quot; /&gt;</div><div class="line">    &lt;logger name=&quot;org.apache.zookeeper&quot;    level=&quot;ERROR&quot;  /&gt;</div><div class="line">    &lt;logger name=&quot;com.alibaba.dubbo.monitor&quot; level=&quot;ERROR&quot;/&gt;</div><div class="line">    &lt;logger name=&quot;com.alibaba.dubbo.remoting&quot; level=&quot;ERROR&quot; /&gt;</div><div class="line"></div><div class="line">    &lt;!-- $&#123;LOG_ROOT_LEVEL&#125; 日志级别 --&gt;</div><div class="line">    &lt;root level=&quot;$&#123;LOG_ROOT_LEVEL&#125;&quot;&gt;</div><div class="line"></div><div class="line">        &lt;!-- 标识这个&quot;$&#123;STDOUT&#125;&quot;将会添加到这个logger --&gt;</div><div class="line">        &lt;appender-ref ref=&quot;$&#123;STDOUT&#125;&quot;/&gt;</div><div class="line"></div><div class="line">        &lt;!-- FILE_ALL 日志输出添加到 logger --&gt;</div><div class="line">        &lt;appender-ref ref=&quot;FILE_ALL&quot;/&gt;</div><div class="line"></div><div class="line">        &lt;!-- FILE_ERROR 日志输出添加到 logger --&gt;</div><div class="line">        &lt;appender-ref ref=&quot;FILE_ERROR&quot;/&gt;</div><div class="line">    &lt;/root&gt;</div><div class="line"></div><div class="line">&lt;/configuration&gt;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;摘抄： &lt;a href=&quot;https://juejin.im/post/5a1f86f0f265da4326529c61&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://juejin.im/post/5a1f86f0f265da4326529
    
    </summary>
    
    
      <category term="Spring boot, logback" scheme="http://yoursite.com/tags/Spring-boot-logback/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu服务器 node服务器基本配置</title>
    <link href="http://yoursite.com/2017/11/06/Ubuntu%E6%9C%8D%E5%8A%A1%E5%99%A8-node%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE/"/>
    <id>http://yoursite.com/2017/11/06/Ubuntu服务器-node服务器基本配置/</id>
    <published>2017-11-06T03:48:11.000Z</published>
    <updated>2017-11-06T03:51:02.161Z</updated>
    
    <content type="html"><![CDATA[<h3 id="〇-查看ubuntu的版本"><a href="#〇-查看ubuntu的版本" class="headerlink" title="〇 查看ubuntu的版本"></a>〇 查看ubuntu的版本</h3><p>执行命令：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">cat /proc/version  # 查看内核版本</div><div class="line">uname -a          # 查看内核版本</div><div class="line">cat /etc/issue  # 方法一</div><div class="line">lsb_release -a # 方法二</div><div class="line">cat /etc/lsb-release # 方法三</div></pre></td></tr></table></figure></p>
<h3 id="node环境安装"><a href="#node环境安装" class="headerlink" title="node环境安装"></a>node环境安装</h3><p> 执行以下命令：<br> <figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">curl -sL https://deb.nodesource.com/setup_6.x | sudo -E bash -</div></pre></td></tr></table></figure></p>
<p> 然后执行:<br>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">apt-get install nodejs</div></pre></td></tr></table></figure></p>
<h3 id="pm2安装"><a href="#pm2安装" class="headerlink" title="pm2安装"></a>pm2安装</h3><p>pm2和forever是启动Nodejs服务常用到的两个工具。使用这两个指令可以使node服务在后台运行，另外它们可以在服务因异常或其他原因被杀掉后进行自动重启。<br>当前项目选用pm2。<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install -g pm2</div></pre></td></tr></table></figure></p>
<h3 id="MongoDB的安装"><a href="#MongoDB的安装" class="headerlink" title="MongoDB的安装"></a>MongoDB的安装</h3><ol>
<li>导入公钥</li>
</ol>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 0C49F3730359A14518585931BC711F9BA15703C6</div></pre></td></tr></table></figure>
<ol>
<li>创建list文件：<br>12.04系统下：</li>
</ol>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">echo "deb [ arch=amd64 ] http://repo.mongodb.org/apt/ubuntu precise/mongodb-org/3.4 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-3.4.list</div></pre></td></tr></table></figure>
<p>14.04系统下</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">echo "deb [ arch=amd64 ] http://repo.mongodb.org/apt/ubuntu trusty/mongodb-org/3.4 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-3.4.list</div></pre></td></tr></table></figure>
<p>16.04系统下</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">echo "deb [ arch=amd64,arm64 ] http://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/3.4 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-3.4.list</div></pre></td></tr></table></figure>
<ol>
<li>更新本地包的数据</li>
</ol>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get update</div></pre></td></tr></table></figure>
<ol>
<li>最后执行命令进行安装</li>
</ol>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install -y mongodb-org</div></pre></td></tr></table></figure>
<ol>
<li>启动mongod服务</li>
</ol>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo service mongod start</div></pre></td></tr></table></figure>
<h3 id="Redis的安装"><a href="#Redis的安装" class="headerlink" title="Redis的安装"></a>Redis的安装</h3><ol>
<li><p>下载解压文件</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">wget http://download.redis.io/redis-stable.tar.gz</div><div class="line">tar xvzf redis-stable.tar.gz</div><div class="line">cd redis-stable</div><div class="line">make</div></pre></td></tr></table></figure>
</li>
<li><p>将运行文件安装到 /usr/bin</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">make install</div></pre></td></tr></table></figure>
</li>
<li><p>创建配置文件夹和数据文件夹</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo mkdir /etc/redis</div><div class="line">sudo mkdir /var/redis</div></pre></td></tr></table></figure>
</li>
<li><p>将编译目录下的脚本拷贝到init.d文件夹下</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo cp utils/redis_init_script /etc/init.d/redis_6379</div></pre></td></tr></table></figure>
</li>
<li><p>拷贝配置文件</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo cp redis.conf /etc/redis/6379.conf</div></pre></td></tr></table></figure>
</li>
<li><p>为redis创建一个数据和工作目录</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo mkdir /var/redis/6379</div></pre></td></tr></table></figure>
</li>
<li><p>编辑/etc/redis/6379.conf</p>
<ul>
<li>把参数 daemonize 设置为 yes (默认是 no).</li>
<li>设置 pidfile 为 /var/run/redis_6379.pid (可以根据需要改变端口).</li>
<li>如果有需要可以改变 port 参数. 默认6379.</li>
<li>设置 loglevel 参数为合适值.</li>
<li>设置 logfile 为 /var/log/redis_6379.log</li>
<li>设置 dir 为 /var/redis/6379 (此步骤很重要!)</li>
</ul>
</li>
<li><p>执行命令：</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo update-rc.d redis_6379 defaults</div></pre></td></tr></table></figure>
</li>
<li><p>启动程序</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo /etc/init.d/redis_6379 start</div></pre></td></tr></table></figure>
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;〇-查看ubuntu的版本&quot;&gt;&lt;a href=&quot;#〇-查看ubuntu的版本&quot; class=&quot;headerlink&quot; title=&quot;〇 查看ubuntu的版本&quot;&gt;&lt;/a&gt;〇 查看ubuntu的版本&lt;/h3&gt;&lt;p&gt;执行命令：&lt;br&gt;&lt;figure class=&quot;hi
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>CentOS环境 node服务器基本配置</title>
    <link href="http://yoursite.com/2017/11/06/CentOS%E7%8E%AF%E5%A2%83-node%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE/"/>
    <id>http://yoursite.com/2017/11/06/CentOS环境-node服务器基本配置/</id>
    <published>2017-11-06T03:44:10.000Z</published>
    <updated>2017-11-07T09:09:22.909Z</updated>
    
    <content type="html"><![CDATA[<h3 id="node环境安装"><a href="#node环境安装" class="headerlink" title="node环境安装"></a>node环境安装</h3><p> 执行以下命令：<br> <figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">curl --silent --location https://rpm.nodesource.com/setup_6.x | bash -</div></pre></td></tr></table></figure></p>
<p> 然后执行:<br>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum -y install nodejs</div></pre></td></tr></table></figure></p>
<h3 id="pm2安装"><a href="#pm2安装" class="headerlink" title="pm2安装"></a>pm2安装</h3><p>pm2和forever是启动Nodejs服务常用到的两个工具。使用这两个指令可以使node服务在后台运行，另外它们可以在服务因异常或其他原因被杀掉后进行自动重启。<br>当前项目选用pm2。<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install -g pm2</div></pre></td></tr></table></figure></p>
<h3 id="MongoDB的安装"><a href="#MongoDB的安装" class="headerlink" title="MongoDB的安装"></a>MongoDB的安装</h3><p>首先配置yum</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vi  /etc/yum.repos.d/mongodb-org-3.0.repo</div></pre></td></tr></table></figure>
<p>然后填入内容:</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">[mongodb-org-3.4]</div><div class="line">name=MongoDB Repository</div><div class="line">baseurl=https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/3.4/x86_64/</div><div class="line">gpgcheck=1</div><div class="line">enabled=1</div><div class="line">gpgkey=https://www.mongodb.org/static/pgp/server-3.4.asc</div></pre></td></tr></table></figure>
<p>最后执行命令进行安装</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum -y install mongodb-org</div></pre></td></tr></table></figure>
<p>手动创建数据文件夹</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mkdir -p  /data/db</div></pre></td></tr></table></figure>
<p>启动mongod服务</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service mongod start</div></pre></td></tr></table></figure>
<h3 id="Redis的安装"><a href="#Redis的安装" class="headerlink" title="Redis的安装"></a>Redis的安装</h3><p>首先检查环境<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">yum install -y gcc-c++</div><div class="line">yum install -y tcl</div><div class="line">yum install -y wget</div></pre></td></tr></table></figure></p>
<p>下载redis文件<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wget http://download.redis.io/releases/redis-3.2.6.tar.gz</div></pre></td></tr></table></figure></p>
<p>解压并编译<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">tar xzf redis-3.2.6.tar.gz</div><div class="line">cd redis-3.2.6</div><div class="line">make</div></pre></td></tr></table></figure></p>
<p>如果出现错误 jemalloc/jemalloc.h: No such file or directory,则使用下面命令：</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">make MALLOC=libc</div></pre></td></tr></table></figure>
<p>将编译后的redis-server复制到/usr/bin</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cp src/redis-server /usr/bin/</div></pre></td></tr></table></figure>
<p>创建配置文件夹和数据文件夹<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo mkdir /etc/redis</div><div class="line">sudo mkdir /var/redis</div></pre></td></tr></table></figure></p>
<p>将编译目录下的脚本拷贝到init.d文件夹下<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo cp utils/redis_init_script /etc/init.d/redis_6379</div></pre></td></tr></table></figure></p>
<p>拷贝配置文件<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo cp redis.conf /etc/redis/6379.conf</div></pre></td></tr></table></figure></p>
<p>为redis创建一个数据和工作目录<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo mkdir /var/redis/6379</div></pre></td></tr></table></figure></p>
<p>编辑/etc/redis/6379.conf</p>
<ul>
<li>把参数 daemonize 设置为 yes (默认是 no).</li>
<li>设置 pidfile 为 /var/run/redis_6379.pid (可以根据需要改变端口).</li>
<li>如果有需要可以改变 port 参数. 默认6379.</li>
<li>设置 loglevel 参数为合适值.</li>
<li>设置 logfile 为 /var/log/redis_6379.log</li>
<li>设置 dir 为 /var/redis/6379 (此步骤很重要!)</li>
</ul>
<p>启动程序<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo /etc/init.d/redis_6379 start</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;node环境安装&quot;&gt;&lt;a href=&quot;#node环境安装&quot; class=&quot;headerlink&quot; title=&quot;node环境安装&quot;&gt;&lt;/a&gt;node环境安装&lt;/h3&gt;&lt;p&gt; 执行以下命令：&lt;br&gt; &lt;figure class=&quot;highlight shell&quot;&gt;&lt;
    
    </summary>
    
    
      <category term="CentOS Node PM2" scheme="http://yoursite.com/tags/CentOS-Node-PM2/"/>
    
  </entry>
  
  <entry>
    <title>zookeeper常用命令</title>
    <link href="http://yoursite.com/2017/11/03/zookeeper%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>http://yoursite.com/2017/11/03/zookeeper常用命令/</id>
    <published>2017-11-03T10:09:16.000Z</published>
    <updated>2017-11-03T10:20:11.954Z</updated>
    
    <content type="html"><![CDATA[<p>zookeeper 安装目录下有 zkCli工具（windows下 zkCli.cmd, linux 下 zkCli.sh）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">./zkCli.sh  # 连接本地 zookeeper</div><div class="line">./zkCli.sh -server 10.1.1.3:2181 # 连接远程zookeeper</div></pre></td></tr></table></figure></p>
<p>以下命令均是在zkCli下输入。</p>
<ol>
<li>ls<br>查看节点<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ls /</div></pre></td></tr></table></figure>
</li>
</ol>
<p>输出：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[zookeeper, hhh, xyz]</div></pre></td></tr></table></figure></p>
<ol>
<li>ls2<br>查看节点详细数据<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ls2 /</div></pre></td></tr></table></figure>
</li>
</ol>
<p>输出：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">[hhh, a, b, zookeeper, dubbo]</div><div class="line">cZxid = 0x0</div><div class="line">ctime = Thu Jan 01 08:00:00 CST 1970</div><div class="line">mZxid = 0x0</div><div class="line">mtime = Thu Jan 01 08:00:00 CST 1970</div><div class="line">pZxid = 0x1c0</div><div class="line">cversion = 9</div><div class="line">dataVersion = 0</div><div class="line">aclVersion = 0</div><div class="line">ephemeralOwner = 0x0</div><div class="line">dataLength = 0</div><div class="line">numChildren = 5</div></pre></td></tr></table></figure></p>
<p>节点信息介绍<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">cZxid：节点创建时的zxid</div><div class="line">ctime：节点创建时间</div><div class="line">mZxid： 节点最新一次更新发生时的zxid</div><div class="line">mtime： 节点最新一次更新发生时间</div><div class="line">pZxid： 0x198</div><div class="line">cversion： 其子节点的更新次数</div><div class="line">dataVersion： 节点数据的更新次数</div><div class="line">aclVersion： 节点ACL(授权信息)的更新次数</div><div class="line">ephemeralOwner： 如果该节点为ephemeral节点, ephemeralOwner值表示与该节点绑定的session id. 如果该节点不是ephemeral节点, ephemeralOwner值为0</div><div class="line">dataLength： 节点数据的字节数</div><div class="line">numChildren： 子节点个数</div></pre></td></tr></table></figure></p>
<ol>
<li><p>create<br>创建节点， 其中-e 代表临时节点 -s代表持久节点 默认是-s。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">create -e /node data # 创建临时节点</div><div class="line">create -s /node data</div></pre></td></tr></table></figure>
</li>
<li><p>get<br>获取节点数据</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">get /node</div></pre></td></tr></table></figure>
</li>
<li><p>set<br>更新节点数据</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">set /node data</div></pre></td></tr></table></figure>
</li>
<li><p>delete<br>删除节点 （子节点为空时会删除失败）</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">delete /node</div></pre></td></tr></table></figure>
</li>
<li><p>rmr<br>删除节点 （存在子节点仍能删除成功）</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rmr /node</div></pre></td></tr></table></figure>
</li>
<li><p>stat<br>获取节点信息</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">stat /node</div></pre></td></tr></table></figure>
</li>
<li><p>sync</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">delete /hari</div><div class="line">rmr /hari</div></pre></td></tr></table></figure>
</li>
<li><p>getAcl<br>获取权限数据</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">getAcl /dubbo</div></pre></td></tr></table></figure>
</li>
</ol>
<p>输出：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&apos;world,&apos;anyone</div><div class="line">: cdrwa</div></pre></td></tr></table></figure></p>
<p>简单说ACL 和UGO（User，Group，Other）一样，都是权限控制的方式，acl字段分为 scheme:id:permission<br>上面的权限模式是’world,’，授权对象ID是anyone，权限是cdrwa（create, delete, read, write, admin）</p>
<ol>
<li><p>setAcl</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">setAcl /node world:anyone:crdwa</div><div class="line">setAcl /newnode ip:127.0.0.1:crdwa</div><div class="line"></div><div class="line">addauth digest user_abc:pwd_abc # 先添加auth信息</div><div class="line">setAcl /newnode digest:user_abc:pwd_abc:crdwa</div></pre></td></tr></table></figure>
</li>
<li><p>setquota<br>setquota ：设置子节点的个数（-n：子节点个数的限制，-b：数据数据节点数据长度的限制）</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">setquota -n 3 /node</div></pre></td></tr></table></figure>
</li>
<li><p>delquota<br>删除数据节点配额的情况</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">delquota /node</div></pre></td></tr></table></figure>
</li>
<li><p>listquota<br>查看数据节点配额的情况</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">listquota /node</div></pre></td></tr></table></figure>
</li>
<li><p>sync</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sync /aa</div></pre></td></tr></table></figure>
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;zookeeper 安装目录下有 zkCli工具（windows下 zkCli.cmd, linux 下 zkCli.sh）&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div
    
    </summary>
    
    
      <category term="zookeeper" scheme="http://yoursite.com/tags/zookeeper/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu下zookeeper安装</title>
    <link href="http://yoursite.com/2017/11/03/ubuntu%E4%B8%8Bzookeeper%E5%AE%89%E8%A3%85/"/>
    <id>http://yoursite.com/2017/11/03/ubuntu下zookeeper安装/</id>
    <published>2017-11-03T10:09:16.000Z</published>
    <updated>2017-11-03T10:20:11.964Z</updated>
    
    <content type="html"><![CDATA[<p>1.下载zookeeper, 并解压<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> /opt</div><div class="line">wget http://mirror.bit.edu.cn/apache/zookeeper/stable/zookeeper-3.4.10.tar.gz</div><div class="line">tar -xvf zookeeper-3.4.10.tar.gz</div></pre></td></tr></table></figure></p>
<p>2.创建数据文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mkdir -p /data/zookeeper</div></pre></td></tr></table></figure></p>
<p>3.创建配置文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> ./conf</div><div class="line">mv zoo_sample.cfg  zoo.cfg</div></pre></td></tr></table></figure></p>
<p>4.设置数据文件目录, 更改zoo.cfg中配置：dataDir=/data/zookeeper </p>
<p>5.启动服务<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd ./bin</div><div class="line">./zkServer.sh start</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;1.下载zookeeper, 并解压&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div
    
    </summary>
    
    
      <category term="zookeeper" scheme="http://yoursite.com/tags/zookeeper/"/>
    
  </entry>
  
  <entry>
    <title>nvm教程</title>
    <link href="http://yoursite.com/2017/11/03/nvm%E6%95%99%E7%A8%8B/"/>
    <id>http://yoursite.com/2017/11/03/nvm教程/</id>
    <published>2017-11-03T10:09:16.000Z</published>
    <updated>2017-11-03T10:20:11.931Z</updated>
    
    <content type="html"><![CDATA[<ol>
<li><p>下载 在地址  <a href="https://github.com/coreybutler/nvm-windows/releases" target="_blank" rel="external">https://github.com/coreybutler/nvm-windows/releases</a><br>找最新版本的nvm-setup.zip 下载</p>
</li>
<li><p>安装，一路next。</p>
</li>
<li><p>执行 nvm list available   查看所有可用版本</p>
</li>
<li><p>nvm install xx.xx.xx 安装指定版本 </p>
</li>
<li><p>nvm list 查看当前可用版本</p>
</li>
<li><p>nvm use xx.xx.xx 使用指定版本</p>
</li>
<li><p>node –version 确认版本切换成功。</p>
</li>
<li><p>nvm uninstall xx.xx.xx 卸载指定版本</p>
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;&lt;p&gt;下载 在地址  &lt;a href=&quot;https://github.com/coreybutler/nvm-windows/releases&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/coreybut
    
    </summary>
    
    
      <category term="nvm" scheme="http://yoursite.com/tags/nvm/"/>
    
  </entry>
  
  <entry>
    <title>Express项目安全建议</title>
    <link href="http://yoursite.com/2017/09/18/Express%E9%A1%B9%E7%9B%AE%E5%AE%89%E5%85%A8%E5%BB%BA%E8%AE%AE/"/>
    <id>http://yoursite.com/2017/09/18/Express项目安全建议/</id>
    <published>2017-09-18T06:33:17.000Z</published>
    <updated>2017-09-18T06:33:32.836Z</updated>
    
    <content type="html"><![CDATA[<p>参照文档 <a href="http://expressjs.com/zh-cn/advanced/best-practice-security.html" target="_blank" rel="external">http://expressjs.com/zh-cn/advanced/best-practice-security.html</a></p>
<ol>
<li><p>使用 Helmet<br>Helmet 通过适当地设置 HTTP 头，帮助您保护应用程序避免一些众所周知的 Web 漏洞。</p>
<ul>
<li>csp 用于设置 Content-Security-Policy 头，帮助抵御跨站点脚本编制攻击和其他跨站点注入攻击。</li>
<li>hidePoweredBy 用于移除 X-Powered-By 头。</li>
<li>hpkp 用于添加公用密钥固定头，防止以伪造证书进行的中间人攻击。</li>
<li>hsts 用于设置 Strict-Transport-Security 头，实施安全的服务器连接 (HTTP over SSL/TLS)。</li>
<li>ieNoOpen 用于为 IE8+ 设置 X-Download-Options。</li>
<li>noCache 用于设置 Cache-Control 和 Pragma 头，以禁用客户端高速缓存。</li>
<li>noSniff 用于设置 X-Content-Type-Options，以防止攻击者以 MIME 方式嗅探浏览器发出的响应中声明的 content-type。</li>
<li>frameguard 用于设置 X-Frame-Options 头，提供 clickjacking 保护。</li>
<li>xssFilter 用于设置 X-XSS-Protection，在最新的 Web 浏览器中启用跨站点脚本编制 (XSS) 过滤器。<br>安装：<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install --save helmet</div></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ol>
<p>使用：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">var helmet = require(&apos;helmet&apos;);</div><div class="line">app.use(helmet());</div></pre></td></tr></table></figure></p>
<ol>
<li><p>禁用 X-Powered-By 头<br>如果使用 helmet.js，它会为自动屏蔽改header，没有使用的话，可以使用下面的代码禁用。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">app.disable(&apos;x-powered-by&apos;);</div></pre></td></tr></table></figure>
</li>
<li><p>安全地使用 cookie<br>需要更改session的name ，默认是 ‘connect.sid’ ，修改为sessionId</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">var session = require(&apos;express-session&apos;);</div><div class="line">app.set(&apos;trust proxy&apos;, 1) // trust first proxy</div><div class="line">app.use( session(&#123;</div><div class="line">   secret : &apos;s3Cur3&apos;,</div><div class="line">   name : &apos;sessionId&apos;,</div><div class="line">  &#125;)</div><div class="line">);</div></pre></td></tr></table></figure>
</li>
<li><p>检查依赖包的安全性</p>
</li>
</ol>
<p>有两个工具可选，功能类似： nsp 和 requireSafe</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">npm install -g nsp</div><div class="line">npm install -g requiresafe</div></pre></td></tr></table></figure>
<p>使用nsp的话，命令为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">nsp audit-package</div></pre></td></tr></table></figure></p>
<p>使用requiresafe的话，命令为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">requiresafe check</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;参照文档 &lt;a href=&quot;http://expressjs.com/zh-cn/advanced/best-practice-security.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://expressjs.com/zh-cn/
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Node项目ubuntu环境搭建简介</title>
    <link href="http://yoursite.com/2017/09/18/Node%E9%A1%B9%E7%9B%AEubuntu%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E7%AE%80%E4%BB%8B/"/>
    <id>http://yoursite.com/2017/09/18/Node项目ubuntu环境搭建简介/</id>
    <published>2017-09-18T06:30:48.000Z</published>
    <updated>2017-09-18T06:31:03.155Z</updated>
    
    <content type="html"><![CDATA[<h3 id="〇-查看ubuntu的版本"><a href="#〇-查看ubuntu的版本" class="headerlink" title="〇 查看ubuntu的版本"></a>〇 查看ubuntu的版本</h3><p>执行命令：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">cat /proc/version  # 查看内核版本</div><div class="line">uname -a          # 查看内核版本</div><div class="line">cat /etc/issue  # 方法一</div><div class="line">lsb_release -a # 方法二</div><div class="line">cat /etc/lsb-release # 方法三</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install python-software-properties</div><div class="line">sudo apt-get install software-properties-common</div><div class="line">sudo add-apt-repository ppa:rwky/graphicsmagick</div><div class="line">sudo apt-get update</div><div class="line">sudo apt-get install graphicsmagick</div></pre></td></tr></table></figure>
<h2 id="一、服务器基环境的配置"><a href="#一、服务器基环境的配置" class="headerlink" title="一、服务器基环境的配置"></a>一、服务器基环境的配置</h2><h3 id="node环境安装"><a href="#node环境安装" class="headerlink" title="node环境安装"></a>node环境安装</h3><p> 执行以下命令：<br> <figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">curl -sL https://deb.nodesource.com/setup_6.x | sudo -E bash -</div></pre></td></tr></table></figure></p>
<p> 然后执行:<br>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">apt-get install nodejs</div></pre></td></tr></table></figure></p>
<h3 id="pm2安装"><a href="#pm2安装" class="headerlink" title="pm2安装"></a>pm2安装</h3><p>pm2和forever是启动Nodejs服务常用到的两个工具。使用这两个指令可以使node服务在后台运行，另外它们可以在服务因异常或其他原因被杀掉后进行自动重启。<br>当前项目选用pm2。<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install -g pm2</div></pre></td></tr></table></figure></p>
<h3 id="NGINX的安装"><a href="#NGINX的安装" class="headerlink" title="NGINX的安装"></a>NGINX的安装</h3><h3 id="MongoDB的安装"><a href="#MongoDB的安装" class="headerlink" title="MongoDB的安装"></a>MongoDB的安装</h3><ol>
<li>导入公钥</li>
</ol>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 0C49F3730359A14518585931BC711F9BA15703C6</div></pre></td></tr></table></figure>
<ol>
<li>创建list文件：<br>12.04系统下：</li>
</ol>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">echo "deb [ arch=amd64 ] http://repo.mongodb.org/apt/ubuntu precise/mongodb-org/3.4 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-3.4.list</div></pre></td></tr></table></figure>
<p>14.04系统下</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">echo "deb [ arch=amd64 ] http://repo.mongodb.org/apt/ubuntu trusty/mongodb-org/3.4 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-3.4.list</div></pre></td></tr></table></figure>
<p>16.04系统下</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">echo "deb [ arch=amd64,arm64 ] http://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/3.4 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-3.4.list</div></pre></td></tr></table></figure>
<ol>
<li>更新本地包的数据</li>
</ol>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get update</div></pre></td></tr></table></figure>
<ol>
<li>最后执行命令进行安装</li>
</ol>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install -y mongodb-org</div></pre></td></tr></table></figure>
<ol>
<li>启动mongod服务</li>
</ol>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo service mongod start</div></pre></td></tr></table></figure>
<h3 id="Redis的安装"><a href="#Redis的安装" class="headerlink" title="Redis的安装"></a>Redis的安装</h3><ol>
<li><p>下载解压文件</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">wget http://download.redis.io/redis-stable.tar.gz</div><div class="line">tar xvzf redis-stable.tar.gz</div><div class="line">cd redis-stable</div><div class="line">make</div></pre></td></tr></table></figure>
</li>
<li><p>将运行文件安装到 /usr/bin</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">make install</div></pre></td></tr></table></figure>
</li>
<li><p>创建配置文件夹和数据文件夹</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo mkdir /etc/redis</div><div class="line">sudo mkdir /var/redis</div></pre></td></tr></table></figure>
</li>
<li><p>将编译目录下的脚本拷贝到init.d文件夹下</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo cp utils/redis_init_script /etc/init.d/redis_6379</div></pre></td></tr></table></figure>
</li>
<li><p>拷贝配置文件</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo cp redis.conf /etc/redis/6379.conf</div></pre></td></tr></table></figure>
</li>
<li><p>为redis创建一个数据和工作目录</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo mkdir /var/redis/6379</div></pre></td></tr></table></figure>
</li>
<li><p>编辑/etc/redis/6379.conf</p>
<ul>
<li>把参数 daemonize 设置为 yes (默认是 no).</li>
<li>设置 pidfile 为 /var/run/redis_6379.pid (可以根据需要改变端口).</li>
<li>如果有需要可以改变 port 参数. 默认6379.</li>
<li>设置 loglevel 参数为合适值.</li>
<li>设置 logfile 为 /var/log/redis_6379.log</li>
<li>设置 dir 为 /var/redis/6379 (此步骤很重要!)</li>
</ul>
</li>
<li><p>执行命令：</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo update-rc.d redis_6379 defaults</div></pre></td></tr></table></figure>
</li>
<li><p>启动程序</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo /etc/init.d/redis_6379 start</div></pre></td></tr></table></figure>
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;〇-查看ubuntu的版本&quot;&gt;&lt;a href=&quot;#〇-查看ubuntu的版本&quot; class=&quot;headerlink&quot; title=&quot;〇 查看ubuntu的版本&quot;&gt;&lt;/a&gt;〇 查看ubuntu的版本&lt;/h3&gt;&lt;p&gt;执行命令：&lt;br&gt;&lt;figure class=&quot;hi
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Node项目CentOS环境搭建简介</title>
    <link href="http://yoursite.com/2017/09/18/Node%E9%A1%B9%E7%9B%AECentOS%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E7%AE%80%E4%BB%8B/"/>
    <id>http://yoursite.com/2017/09/18/Node项目CentOS环境搭建简介/</id>
    <published>2017-09-18T06:29:02.000Z</published>
    <updated>2017-09-18T06:30:20.377Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、服务器基环境的配置"><a href="#一、服务器基环境的配置" class="headerlink" title="一、服务器基环境的配置"></a>一、服务器基环境的配置</h2><p>以下的命令都建议切换到管理员身份运行：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo -i</div></pre></td></tr></table></figure></p>
<h3 id="node环境安装"><a href="#node环境安装" class="headerlink" title="node环境安装"></a>node环境安装</h3><p> 执行以下命令：<br> <figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">curl --silent --location https://rpm.nodesource.com/setup_6.x | bash -</div></pre></td></tr></table></figure></p>
<p> 然后执行:<br>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum -y install nodejs</div></pre></td></tr></table></figure></p>
<h3 id="pm2安装"><a href="#pm2安装" class="headerlink" title="pm2安装"></a>pm2安装</h3><p>pm2和forever是启动Nodejs服务常用到的两个工具。使用这两个指令可以使node服务在后台运行，另外它们可以在服务因异常或其他原因被杀掉后进行自动重启。<br>当前项目选用pm2。<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install -g pm2</div></pre></td></tr></table></figure></p>
<h3 id="NGINX的安装"><a href="#NGINX的安装" class="headerlink" title="NGINX的安装"></a>NGINX的安装</h3><p>本安装针对于CentOS7的系统。首先需要添加nginx的源:<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rpm -Uvh http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm</div></pre></td></tr></table></figure></p>
<p>然后执行命令安装nginx：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum -y install nginx</div></pre></td></tr></table></figure></p>
<p>启动nginx服务<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">systemctl start nginx.service</div></pre></td></tr></table></figure></p>
<p>配置与系统一起启动<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">systemctl enable nginx.service</div></pre></td></tr></table></figure></p>
<p>修改配置,配置文件存放目录：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">/etc/nginx/nginx.conf</div><div class="line">/etc/nginx/conf.d/*.conf</div></pre></td></tr></table></figure></p>
<p>测试配置：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">nginx -t -c /etc/nginx/nginx.conf</div></pre></td></tr></table></figure></p>
<p>重启nginx<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">nginx -s reload</div></pre></td></tr></table></figure></p>
<p> 或者<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service nginx restart</div></pre></td></tr></table></figure></p>
<p>CentOS7需要关闭selinux功能,否则端口转发时会出错<br>编辑selinux文件<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/etc/sysconfig/selinux</div></pre></td></tr></table></figure></p>
<p>注释掉下面代码<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span>SELINUX=enforcing</div></pre></td></tr></table></figure></p>
<p>将此行代码取消注释,修改后为:<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SELINUX=disabled</div></pre></td></tr></table></figure></p>
<p>设置 SELinux 状态<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">setenforce 0</div></pre></td></tr></table></figure></p>
<p>执行命令,获取SELinux状态</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">getenforce</div></pre></td></tr></table></figure>
<h3 id="MongoDB的安装"><a href="#MongoDB的安装" class="headerlink" title="MongoDB的安装"></a>MongoDB的安装</h3><p>首先配置yum</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vi  /etc/yum.repos.d/mongodb-org-3.0.repo</div></pre></td></tr></table></figure>
<p>然后填入内容:</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">[mongodb-org-3.4]</div><div class="line">name=MongoDB Repository</div><div class="line">baseurl=https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/3.4/x86_64/</div><div class="line">gpgcheck=1</div><div class="line">enabled=1</div><div class="line">gpgkey=https://www.mongodb.org/static/pgp/server-3.4.asc</div></pre></td></tr></table></figure>
<p>最后执行命令进行安装</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum -y install mongodb-org</div></pre></td></tr></table></figure>
<p>手动创建数据文件夹</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mkdir -p  /data/db</div></pre></td></tr></table></figure>
<p>启动mongod服务</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service mongod start</div></pre></td></tr></table></figure>
<h3 id="Redis的安装"><a href="#Redis的安装" class="headerlink" title="Redis的安装"></a>Redis的安装</h3><p>首先检查环境<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">yum install -y gcc-c++</div><div class="line">yum install -y tcl</div><div class="line">yum install -y wget</div></pre></td></tr></table></figure></p>
<p>下载redis文件<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wget http://download.redis.io/releases/redis-3.2.6.tar.gz</div></pre></td></tr></table></figure></p>
<p>解压并编译<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">tar xzf redis-3.2.6.tar.gz</div><div class="line">cd redis-3.2.6</div><div class="line">make</div></pre></td></tr></table></figure></p>
<p>如果出现错误 jemalloc/jemalloc.h: No such file or directory,则使用下面命令：</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">make MALLOC=libc</div></pre></td></tr></table></figure>
<p>将编译后的redis-server复制到/usr/bin</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cp src/redis-server /usr/bin/</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、服务器基环境的配置&quot;&gt;&lt;a href=&quot;#一、服务器基环境的配置&quot; class=&quot;headerlink&quot; title=&quot;一、服务器基环境的配置&quot;&gt;&lt;/a&gt;一、服务器基环境的配置&lt;/h2&gt;&lt;p&gt;以下的命令都建议切换到管理员身份运行：&lt;br&gt;&lt;figure cla
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>常用命令介绍</title>
    <link href="http://yoursite.com/2017/09/18/npm%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E4%BB%8B%E7%BB%8D/"/>
    <id>http://yoursite.com/2017/09/18/npm常用命令介绍/</id>
    <published>2017-09-18T06:27:06.000Z</published>
    <updated>2017-09-18T06:28:37.965Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="node" scheme="http://yoursite.com/tags/node/"/>
    
  </entry>
  
  <entry>
    <title>Node项目常用库介绍</title>
    <link href="http://yoursite.com/2017/09/18/Node%E9%A1%B9%E7%9B%AE%E5%B8%B8%E7%94%A8%E5%BA%93%E4%BB%8B%E7%BB%8D/"/>
    <id>http://yoursite.com/2017/09/18/Node项目常用库介绍/</id>
    <published>2017-09-18T06:25:57.000Z</published>
    <updated>2017-09-18T06:26:37.088Z</updated>
    
    <content type="html"><![CDATA[<ol>
<li><p>nodemon</p>
</li>
<li><p>concurrently<br>同时运行几个任务的工具，类似于 npm run watch-js &amp; npm run watch-less<br>配合参数 –kill-others 使用，代表一个任务失败的话其他任务也会被kill掉</p>
</li>
<li><p>PM2</p>
</li>
<li><p>tsc, tslint</p>
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;&lt;p&gt;nodemon&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;concurrently&lt;br&gt;同时运行几个任务的工具，类似于 npm run watch-js &amp;amp; npm run watch-less&lt;br&gt;配合参数 –kill-others 使用，代表一个任
    
    </summary>
    
    
      <category term="Node" scheme="http://yoursite.com/tags/Node/"/>
    
  </entry>
  
  <entry>
    <title>node-sass安装不成功解决办法</title>
    <link href="http://yoursite.com/2017/09/18/node-sass%E5%AE%89%E8%A3%85%E4%B8%8D%E6%88%90%E5%8A%9F%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
    <id>http://yoursite.com/2017/09/18/node-sass安装不成功解决办法/</id>
    <published>2017-09-18T06:17:10.000Z</published>
    <updated>2017-09-18T06:21:30.068Z</updated>
    
    <content type="html"><![CDATA[<h1 id="方法一、-设置国内的镜像"><a href="#方法一、-设置国内的镜像" class="headerlink" title="方法一、 设置国内的镜像"></a>方法一、 设置国内的镜像</h1><p>windows下分两个命令执行<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">SET SASS_BINARY_SITE=https://npm.taobao.org/mirrors/node-sass/  <span class="comment"># --设置环境变量</span></div><div class="line">npm install node-sass   <span class="comment"># 安装</span></div></pre></td></tr></table></figure></p>
<p>linux下一个命令就可以了<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SASS_BINARY_SITE=https://npm.taobao.org/mirrors/node-sass/ npm install node-sass</div></pre></td></tr></table></figure></p>
<h1 id="方法二、-利用代理"><a href="#方法二、-利用代理" class="headerlink" title="方法二、 利用代理"></a>方法二、 利用代理</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">npm config <span class="built_in">set</span> proxy http://127.0.0.1:1080</div><div class="line">npm install node-sass   <span class="comment"># 安装</span></div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;方法一、-设置国内的镜像&quot;&gt;&lt;a href=&quot;#方法一、-设置国内的镜像&quot; class=&quot;headerlink&quot; title=&quot;方法一、 设置国内的镜像&quot;&gt;&lt;/a&gt;方法一、 设置国内的镜像&lt;/h1&gt;&lt;p&gt;windows下分两个命令执行&lt;br&gt;&lt;figure cla
    
    </summary>
    
    
      <category term="node" scheme="http://yoursite.com/tags/node/"/>
    
  </entry>
  
  <entry>
    <title>angular-cli常用命令</title>
    <link href="http://yoursite.com/2017/09/18/angular-cli%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>http://yoursite.com/2017/09/18/angular-cli常用命令/</id>
    <published>2017-09-18T06:14:49.000Z</published>
    <updated>2017-09-18T06:16:21.294Z</updated>
    
    <content type="html"><![CDATA[<h1 id="NG常用命令"><a href="#NG常用命令" class="headerlink" title="NG常用命令"></a>NG常用命令</h1><h1 id="ng-help"><a href="#ng-help" class="headerlink" title="ng help"></a>ng help</h1><p>打印帮助信息</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ng help</div></pre></td></tr></table></figure>
<h1 id="ng-new"><a href="#ng-new" class="headerlink" title="ng new"></a>ng new</h1><p>创建新项目</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ng new PROJECT_NAME</div><div class="line">ng new sassy-project --style=sass #使用sass框架</div></pre></td></tr></table></figure>
<h1 id="ng-serve"><a href="#ng-serve" class="headerlink" title="ng serve"></a>ng serve</h1><p>启动服务</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ng serve #简单情况</div><div class="line">ng serve --host 0.0.0.0 --port 4201 --live-reload-port 49153 # 指定端口</div></pre></td></tr></table></figure>
<h1 id="ng-generate"><a href="#ng-generate" class="headerlink" title="ng generate"></a>ng generate</h1><p>简写 ng g ，用来生成angular2的组件，服务，接口等内容</p>
<table>
<thead>
<tr>
<th>名称</th>
<th>命令</th>
</tr>
</thead>
<tbody>
<tr>
<td>Component</td>
<td>ng g component my-new-component</td>
</tr>
<tr>
<td>Directive</td>
<td>ng g directive my-new-directive</td>
</tr>
<tr>
<td>Pipe</td>
<td>ng g pipe my-new-pipe</td>
</tr>
<tr>
<td>Service</td>
<td>ng g service my-new-service</td>
</tr>
<tr>
<td>Class</td>
<td>ng g class my-new-class</td>
</tr>
<tr>
<td>Interface</td>
<td>ng g interface my-new-interface</td>
</tr>
<tr>
<td>Enum</td>
<td>ng g enum my-new-enum</td>
</tr>
<tr>
<td>Module</td>
<td>ng g module my-module</td>
</tr>
</tbody>
</table>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">ng g component my-new-component </div><div class="line">ng g directive my-new-directive</div><div class="line">ng g pipe my-new-pipe</div><div class="line">ng g service my-new-service</div><div class="line">ng g class my-new-class</div><div class="line">ng g interface my-new-interface</div><div class="line">ng g enum my-new-enum</div><div class="line">ng g module my-module</div></pre></td></tr></table></figure>
<p>创建路由：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ng new PROJECT_NAME --routing     # 创建项目时就创建一个app-routing.module.ts文件</div><div class="line">ng g module my-module --routing  # 创建模块时创建一个my-module-routing.module.ts文件</div></pre></td></tr></table></figure>
<h1 id="ng-build"><a href="#ng-build" class="headerlink" title="ng build"></a>ng build</h1><p>构建项目 配置文件是angular-cli.json的文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"># 以下语句等价</div><div class="line">ng build --target=production --environment=prod</div><div class="line">ng build --prod --env=prod</div><div class="line">ng build --prod</div><div class="line"># 以下语句等价</div><div class="line">ng build --target=development --environment=dev</div><div class="line">ng build --dev --e=dev</div><div class="line">ng build --dev</div><div class="line">ng build</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;NG常用命令&quot;&gt;&lt;a href=&quot;#NG常用命令&quot; class=&quot;headerlink&quot; title=&quot;NG常用命令&quot;&gt;&lt;/a&gt;NG常用命令&lt;/h1&gt;&lt;h1 id=&quot;ng-help&quot;&gt;&lt;a href=&quot;#ng-help&quot; class=&quot;headerlink&quot; ti
    
    </summary>
    
    
      <category term="Angular" scheme="http://yoursite.com/tags/Angular/"/>
    
  </entry>
  
  <entry>
    <title>MongoDB的导入导出</title>
    <link href="http://yoursite.com/2017/09/18/MongoDB%E7%9A%84%E5%AF%BC%E5%85%A5%E5%AF%BC%E5%87%BA/"/>
    <id>http://yoursite.com/2017/09/18/MongoDB的导入导出/</id>
    <published>2017-09-18T03:34:06.000Z</published>
    <updated>2017-09-18T06:18:54.888Z</updated>
    
    <content type="html"><![CDATA[<p>MongoDB的导入导出分为 文本导出 和 二进制导出，文本导出一次导出一个集合，方便与其他数据库交换数据，<br>二进制导出的是MongoDB自己的格式，可以导出整个数据库，体积小，速度快。</p>
<h1 id="文本导出"><a href="#文本导出" class="headerlink" title="文本导出"></a>文本导出</h1><h2 id="mongoexport-导出表"><a href="#mongoexport-导出表" class="headerlink" title="mongoexport 导出表"></a>mongoexport 导出表</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">-h, --host=&lt;hostname&gt;              主机</div><div class="line">   --port=&lt;port&gt;                   端口</div><div class="line">-u, --username=&lt;username&gt;          用户名</div><div class="line">-p, --password=&lt;passwd&gt;            密码</div><div class="line">-d, --db=&lt;database-name&gt;           数据库名称</div><div class="line">-c, --collection=&lt;collection-name&gt; 集合名称</div><div class="line">-f, --fields=&lt;field&gt;[,&lt;field&gt;]*    逗号分隔的字段名称</div><div class="line">    --<span class="built_in">type</span>=&lt;<span class="built_in">type</span>&gt;                  json或者csv，默认json</div><div class="line">--<span class="built_in">type</span>=&lt;<span class="built_in">type</span>&gt;</div><div class="line">-o, --out=&lt;filename&gt;               导出文件名称</div></pre></td></tr></table></figure>
<p>举例：  导出adminusers集合<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mongoexport -h localhost -d cloudminds -c adminusers  -o ./adminusers.json</div></pre></td></tr></table></figure></p>
<h2 id="mongoimport-导入数据"><a href="#mongoimport-导入数据" class="headerlink" title="mongoimport 导入数据"></a>mongoimport 导入数据</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">-h, --host=&lt;hostname&gt;              主机</div><div class="line">   --port=&lt;port&gt;                   端口</div><div class="line">-u, --username=&lt;username&gt;          用户名</div><div class="line">-p, --password=&lt;passwd&gt;            密码</div><div class="line">-d, --db=&lt;database-name&gt;           数据库名称</div><div class="line">-c, --collection=&lt;collection-name&gt; 集合名称</div><div class="line">-f, --fields=&lt;field&gt;[,&lt;field&gt;]*    逗号分隔的字段名称</div><div class="line">    --<span class="built_in">type</span>=&lt;<span class="built_in">type</span>&gt;                  json或者csv，默认json</div><div class="line">    --out=&lt;filename&gt;               要导入的文件名称</div><div class="line">--<span class="built_in">type</span>=&lt;<span class="built_in">type</span>&gt;</div></pre></td></tr></table></figure>
<p>举例<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mongoimport -h localhost -d cloudminds -c adminusers  --file ./adminusers.json</div></pre></td></tr></table></figure></p>
<h1 id="二进制导出"><a href="#二进制导出" class="headerlink" title="二进制导出"></a>二进制导出</h1><h2 id="mongodump-导出二进制bson结构的数据及其索引信息"><a href="#mongodump-导出二进制bson结构的数据及其索引信息" class="headerlink" title="mongodump 导出二进制bson结构的数据及其索引信息"></a>mongodump 导出二进制bson结构的数据及其索引信息</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">-h, --host=&lt;hostname&gt;              主机</div><div class="line">    --port=&lt;port&gt;                  端口</div><div class="line">-u, --username=&lt;username&gt;          用户名</div><div class="line">-p, --password=&lt;passwd&gt;            密码</div><div class="line">-d, --db=&lt;database-name&gt;           数据库名称</div><div class="line">-c, --collection=&lt;collection-name&gt; 集合名称</div><div class="line">    --<span class="built_in">type</span>=&lt;<span class="built_in">type</span>&gt;</div><div class="line">-o, --out=&lt;filename&gt;               导出文件名称</div></pre></td></tr></table></figure>
<p>导出cloudminds数据库中的数据到文件 bak中</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mongodump -d cloudminds -o bak</div></pre></td></tr></table></figure>
<h2 id="mongorestore-导入二进制文件"><a href="#mongorestore-导入二进制文件" class="headerlink" title="mongorestore 导入二进制文件"></a>mongorestore 导入二进制文件</h2><p>导入备份文件bak中的数据</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mongorestore --drop bak</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;MongoDB的导入导出分为 文本导出 和 二进制导出，文本导出一次导出一个集合，方便与其他数据库交换数据，&lt;br&gt;二进制导出的是MongoDB自己的格式，可以导出整个数据库，体积小，速度快。&lt;/p&gt;
&lt;h1 id=&quot;文本导出&quot;&gt;&lt;a href=&quot;#文本导出&quot; class=
    
    </summary>
    
    
      <category term="MongoDB" scheme="http://yoursite.com/tags/MongoDB/"/>
    
  </entry>
  
  <entry>
    <title>PM2 随系统启动配置</title>
    <link href="http://yoursite.com/2017/09/06/PM2-%E9%9A%8F%E7%B3%BB%E7%BB%9F%E5%90%AF%E5%8A%A8%E9%85%8D%E7%BD%AE/"/>
    <id>http://yoursite.com/2017/09/06/PM2-随系统启动配置/</id>
    <published>2017-09-06T10:09:16.000Z</published>
    <updated>2017-09-06T10:10:05.813Z</updated>
    
    <content type="html"><![CDATA[<ol>
<li><p>自动配置启动脚本</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pm2 startup</div></pre></td></tr></table></figure>
</li>
<li><p>保存当前的进程信息（已启动的服务）</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pm2 save</div></pre></td></tr></table></figure>
</li>
<li><p>手动的测试下保存是否有效</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pm2 resurrect</div></pre></td></tr></table></figure>
</li>
<li><p>如果要取消，启动</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pm2 unstartup</div></pre></td></tr></table></figure></li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;&lt;p&gt;自动配置启动脚本&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;c
    
    </summary>
    
    
      <category term="PM2" scheme="http://yoursite.com/tags/PM2/"/>
    
  </entry>
  
  <entry>
    <title>解决端口占用问题</title>
    <link href="http://yoursite.com/2017/09/06/%E8%A7%A3%E5%86%B3%E7%AB%AF%E5%8F%A3%E5%8D%A0%E7%94%A8%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2017/09/06/解决端口占用问题/</id>
    <published>2017-09-06T09:36:39.258Z</published>
    <updated>2017-09-18T06:15:59.115Z</updated>
    
    <content type="html"><![CDATA[<p>日常开发中经常会遇到端口占用的问题，以下简单记录下解决方案。</p>
<h2 id="Windows-系统"><a href="#Windows-系统" class="headerlink" title="Windows 系统"></a>Windows 系统</h2><p>查看占用指定端口的程序 进程ID<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">netstat -ano|findstr &quot;8080&quot;</div></pre></td></tr></table></figure></p>
<p>找到进程号对应的进程名称<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">tasklist|findstr 3112</div></pre></td></tr></table></figure></p>
<p>可以使用进程管理杀死进程，也可以使用命令工具<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">taskkill /f /t /im /javaw.exe</div></pre></td></tr></table></figure></p>
<h2 id="Linux-系统"><a href="#Linux-系统" class="headerlink" title="Linux 系统"></a>Linux 系统</h2><p>查看占用指定端口的程序 进程ID<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">netstat -apn|grep 8080</div></pre></td></tr></table></figure></p>
<p>找到进程号对应的进程名称<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ps -aux|grep 5566</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">kill 5566</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;日常开发中经常会遇到端口占用的问题，以下简单记录下解决方案。&lt;/p&gt;
&lt;h2 id=&quot;Windows-系统&quot;&gt;&lt;a href=&quot;#Windows-系统&quot; class=&quot;headerlink&quot; title=&quot;Windows 系统&quot;&gt;&lt;/a&gt;Windows 系统&lt;/h2&gt;&lt;p&gt;
    
    </summary>
    
    
      <category term="开发" scheme="http://yoursite.com/tags/%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
</feed>
